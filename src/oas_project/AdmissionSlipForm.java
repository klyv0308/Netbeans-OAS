/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oas_project;

import javax.swing.JFrame;
import javax.swing.*;         // All Swing components like JFrame, JButton, JLabel, JTextField, JOptionPane
import java.awt.*;            // Layout managers like FlowLayout
import java.awt.event.*;      // Event handling like ActionListener, ActionEvent
import java.sql.*;            // JDBC classes like Connection, DriverManager, PreparedStatement, SQLException
import java.util.ArrayList;
import java.util.List;


/**
 *
 * @author AykAyz
 */
public class AdmissionSlipForm extends javax.swing.JFrame {

    /**
     * Creates new form AdmissionSlipForm
     */
    public AdmissionSlipForm() {
        setExtendedState(JFrame.MAXIMIZED_BOTH);    
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblHdr1 = new javax.swing.JLabel();
        lblHdr2 = new javax.swing.JLabel();
        lblText1 = new javax.swing.JLabel();
        lblText2 = new javax.swing.JLabel();
        lblYrSec = new javax.swing.JLabel();
        cbxYear = new javax.swing.JComboBox<>();
        cbxSection = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        lblOffense = new javax.swing.JLabel();
        ckbxAbsent = new javax.swing.JCheckBox();
        ckbxTardy = new javax.swing.JCheckBox();
        ckbxCutting = new javax.swing.JCheckBox();
        txtMinutes = new javax.swing.JTextField();
        txtClasses = new javax.swing.JTextField();
        txtDays = new javax.swing.JTextField();
        lblMinutes = new javax.swing.JLabel();
        lblDays = new javax.swing.JLabel();
        lblClasses = new javax.swing.JLabel();
        txtLName = new javax.swing.JTextField();
        txtGName = new javax.swing.JTextField();
        txtMI = new javax.swing.JTextField();
        lblLName = new javax.swing.JLabel();
        lblGName = new javax.swing.JLabel();
        lblMI = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblSubjects = new javax.swing.JLabel();
        ckbxBio = new javax.swing.JCheckBox();
        ckbxChem = new javax.swing.JCheckBox();
        ckbxEng = new javax.swing.JCheckBox();
        ckbxFil = new javax.swing.JCheckBox();
        ckbxCS = new javax.swing.JCheckBox();
        ckbxMath = new javax.swing.JCheckBox();
        ckbxPEHM = new javax.swing.JCheckBox();
        ckbxPhy = new javax.swing.JCheckBox();
        ckbxSS = new javax.swing.JCheckBox();
        ckbxElective = new javax.swing.JCheckBox();
        ckbxValEd = new javax.swing.JCheckBox();
        ckbxRes = new javax.swing.JCheckBox();
        lblIncDates = new javax.swing.JLabel();
        txtIncDates = new javax.swing.JTextField();
        lblReason = new javax.swing.JLabel();
        txtReason = new javax.swing.JTextField();
        lblAttach = new javax.swing.JLabel();
        ckbxMedCert = new javax.swing.JCheckBox();
        ckbxLetter = new javax.swing.JCheckBox();
        lblCertBy = new javax.swing.JLabel();
        ckbxHSU = new javax.swing.JCheckBox();
        ckbxGSU = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        lblRegistrar = new javax.swing.JLabel();
        ckbxExcused = new javax.swing.JCheckBox();
        ckbxUnexcused = new javax.swing.JCheckBox();
        lblDateIssued = new javax.swing.JLabel();
        txtMonth = new javax.swing.JTextField();
        txtDay = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lblMonth = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 539));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(206, 206, 206));
        jPanel2.setPreferredSize(new java.awt.Dimension(945, 600));

        lblHdr1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblHdr1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHdr1.setText("Philippine Science High School - ZRC");

        lblHdr2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblHdr2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHdr2.setText("Class Admission Slip");

        lblText1.setFont(new java.awt.Font("Arial Narrow", 1, 20)); // NOI18N
        lblText1.setText("To all teachers concerned:");

        lblText2.setFont(new java.awt.Font("Arial Narrow", 1, 20)); // NOI18N
        lblText2.setText("Please admit");

        lblYrSec.setFont(new java.awt.Font("Arial Narrow", 1, 20)); // NOI18N
        lblYrSec.setText("Year & Section:");

        cbxYear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbxYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "7", "8", "9", "10", "11", "12" }));
        cbxYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxYearActionPerformed(evt);
            }
        });

        cbxSection.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbxSection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Diamond", "Emerald", "Ruby", "Jasmin", "Sampaguita", "Waling-Waling", "Lithium", "Sodium", "Potassium", "Gluon", "Muon", "Graviton", "Rigel", "Polaris", "Sirius", "Curie", "Einstein", "Tesla" }));
        cbxSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSectionActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(229, 229, 229));

        lblOffense.setFont(new java.awt.Font("Arial Narrow", 1, 22)); // NOI18N
        lblOffense.setText("OFFENSE:");

        ckbxAbsent.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        ckbxAbsent.setText("Absent   -");
        ckbxAbsent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxAbsentActionPerformed(evt);
            }
        });

        ckbxTardy.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        ckbxTardy.setText("Tardy     -");
        ckbxTardy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxTardyActionPerformed(evt);
            }
        });

        ckbxCutting.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        ckbxCutting.setText("Cutting  -");
        ckbxCutting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxCuttingActionPerformed(evt);
            }
        });

        txtMinutes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinutesActionPerformed(evt);
            }
        });

        txtClasses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClassesActionPerformed(evt);
            }
        });

        txtDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDaysActionPerformed(evt);
            }
        });

        lblMinutes.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        lblMinutes.setText("min/s");

        lblDays.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        lblDays.setText("day/s");

        lblClasses.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        lblClasses.setText("class/es");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ckbxCutting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ckbxTardy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtClasses, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDays, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblOffense)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(ckbxAbsent, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(txtMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMinutes)
                    .addComponent(lblDays)
                    .addComponent(lblClasses))
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblOffense)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbxAbsent)
                    .addComponent(txtMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMinutes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbxTardy)
                    .addComponent(txtDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDays))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbxCutting)
                    .addComponent(txtClasses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblClasses))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        txtGName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGNameActionPerformed(evt);
            }
        });

        txtMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMIActionPerformed(evt);
            }
        });

        lblLName.setFont(new java.awt.Font("Arial Narrow", 1, 16)); // NOI18N
        lblLName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblLName.setText("Last Name");

        lblGName.setFont(new java.awt.Font("Arial Narrow", 1, 16)); // NOI18N
        lblGName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGName.setText("Given Name");

        lblMI.setFont(new java.awt.Font("Arial Narrow", 1, 16)); // NOI18N
        lblMI.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMI.setText("M.I.");

        jPanel4.setBackground(new java.awt.Color(229, 229, 229));

        lblSubjects.setFont(new java.awt.Font("Arial Narrow", 1, 22)); // NOI18N
        lblSubjects.setText("SUBJECT/S:");

        ckbxBio.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ckbxBio.setText("Biology ");
        ckbxBio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxBioActionPerformed(evt);
            }
        });

        ckbxChem.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ckbxChem.setText("Chemistry");
        ckbxChem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxChemActionPerformed(evt);
            }
        });

        ckbxEng.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ckbxEng.setText("English ");
        ckbxEng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxEngActionPerformed(evt);
            }
        });

        ckbxFil.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ckbxFil.setText("Filipino ");
        ckbxFil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxFilActionPerformed(evt);
            }
        });

        ckbxCS.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ckbxCS.setText("Computer Science ");
        ckbxCS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxCSActionPerformed(evt);
            }
        });

        ckbxMath.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ckbxMath.setText("Mathematics ");
        ckbxMath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxMathActionPerformed(evt);
            }
        });

        ckbxPEHM.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ckbxPEHM.setText("P.E.H.M ");
        ckbxPEHM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxPEHMActionPerformed(evt);
            }
        });

        ckbxPhy.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ckbxPhy.setText("Physics ");
        ckbxPhy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxPhyActionPerformed(evt);
            }
        });

        ckbxSS.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ckbxSS.setText("Social Science ");
        ckbxSS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxSSActionPerformed(evt);
            }
        });

        ckbxElective.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ckbxElective.setText("Elective ");
        ckbxElective.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxElectiveActionPerformed(evt);
            }
        });

        ckbxValEd.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ckbxValEd.setText("Values Education ");
        ckbxValEd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxValEdActionPerformed(evt);
            }
        });

        ckbxRes.setFont(new java.awt.Font("Segoe UI Historic", 1, 16)); // NOI18N
        ckbxRes.setText("Research");
        ckbxRes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxResActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckbxCS)
                            .addComponent(ckbxEng)
                            .addComponent(ckbxChem)
                            .addComponent(ckbxBio)))
                    .addComponent(lblSubjects))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ckbxMath)
                    .addComponent(ckbxPEHM)
                    .addComponent(ckbxPhy)
                    .addComponent(ckbxFil))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ckbxRes)
                    .addComponent(ckbxValEd)
                    .addComponent(ckbxElective)
                    .addComponent(ckbxSS))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSubjects)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbxBio)
                    .addComponent(ckbxFil)
                    .addComponent(ckbxRes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbxChem)
                    .addComponent(ckbxMath)
                    .addComponent(ckbxSS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbxCS)
                    .addComponent(ckbxPEHM)
                    .addComponent(ckbxElective))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbxEng)
                    .addComponent(ckbxPhy)
                    .addComponent(ckbxValEd))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        lblIncDates.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        lblIncDates.setText("Inclusive date/s:");

        txtIncDates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIncDatesActionPerformed(evt);
            }
        });

        lblReason.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        lblReason.setText("Reason:");

        txtReason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReasonActionPerformed(evt);
            }
        });

        lblAttach.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        lblAttach.setText("Attachments:");

        ckbxMedCert.setFont(new java.awt.Font("Segoe UI Historic", 0, 17)); // NOI18N
        ckbxMedCert.setText("Medical Certificate");
        ckbxMedCert.setMargin(new java.awt.Insets(1, 1, 1, 1));

        ckbxLetter.setFont(new java.awt.Font("Segoe UI Historic", 0, 17)); // NOI18N
        ckbxLetter.setText("Letter from Parent/Guardian");
        ckbxLetter.setMargin(new java.awt.Insets(1, 1, 1, 1));

        lblCertBy.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        lblCertBy.setText("Certified by:");

        ckbxHSU.setFont(new java.awt.Font("Segoe UI Historic", 1, 17)); // NOI18N
        ckbxHSU.setText("HSU");
        ckbxHSU.setMargin(new java.awt.Insets(1, 1, 1, 1));
        ckbxHSU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxHSUActionPerformed(evt);
            }
        });

        ckbxGSU.setFont(new java.awt.Font("Segoe UI Historic", 1, 17)); // NOI18N
        ckbxGSU.setText("GSU");
        ckbxGSU.setMargin(new java.awt.Insets(1, 1, 1, 1));
        ckbxGSU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxGSUActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(229, 229, 229));

        lblRegistrar.setFont(new java.awt.Font("Arial Narrow", 1, 22)); // NOI18N
        lblRegistrar.setText("Registrar:");

        ckbxExcused.setFont(new java.awt.Font("Segoe UI Historic", 1, 17)); // NOI18N
        ckbxExcused.setText("Excused");
        ckbxExcused.setMargin(new java.awt.Insets(1, 1, 1, 1));
        ckbxExcused.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxExcusedActionPerformed(evt);
            }
        });

        ckbxUnexcused.setFont(new java.awt.Font("Segoe UI Historic", 1, 17)); // NOI18N
        ckbxUnexcused.setText("Unexcused");
        ckbxUnexcused.setMargin(new java.awt.Insets(1, 1, 1, 1));
        ckbxUnexcused.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbxUnexcusedActionPerformed(evt);
            }
        });

        lblDateIssued.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        lblDateIssued.setText("Date issued:");

        txtMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMonthActionPerformed(evt);
            }
        });

        txtDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDayActionPerformed(evt);
            }
        });

        txtYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtYearActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        jLabel18.setText("/");

        jLabel19.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        jLabel19.setText("/");

        lblMonth.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        lblMonth.setText("mm");

        lblDate.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        lblDate.setText("dd");

        lblYear.setFont(new java.awt.Font("Segoe UI Emoji", 1, 16)); // NOI18N
        lblYear.setText("yy");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblRegistrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDateIssued)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(ckbxExcused)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ckbxUnexcused)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel19))
                    .addComponent(lblMonth))
                .addGap(4, 4, 4)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel18))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblDate)))
                .addGap(4, 4, 4)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDateIssued, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ckbxUnexcused, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ckbxExcused, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblMonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lblRegistrar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(378, 378, 378)
                .addComponent(lblHdr2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(334, 334, 334))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHdr1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblText1)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(lblIncDates)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtIncDates))
                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                            .addComponent(lblReason)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtReason, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                            .addComponent(lblCertBy)
                                            .addGap(61, 61, 61))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(lblAttach)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(ckbxMedCert)
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addComponent(ckbxLetter)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(ckbxHSU)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(ckbxGSU))))
                                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(lblText2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtLName, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtGName, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtMI, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(103, 103, 103)
                                    .addComponent(lblYrSec)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbxYear, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbxSection, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(lblLName)
                        .addGap(82, 82, 82)
                        .addComponent(lblGName)
                        .addGap(58, 58, 58)
                        .addComponent(lblMI))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(260, 260, 260))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblHdr1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHdr2)
                .addGap(16, 16, 16)
                .addComponent(lblText1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblText2)
                    .addComponent(lblYrSec)
                    .addComponent(cbxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLName)
                    .addComponent(lblGName)
                    .addComponent(lblMI))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ckbxHSU, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ckbxGSU, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ckbxLetter, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIncDates)
                            .addComponent(txtIncDates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAttach)
                            .addComponent(ckbxMedCert, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCertBy, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtReason, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblReason))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 52, 45, 54);
        jPanel1.add(jPanel2, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1051, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1067, 686));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtGNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGNameActionPerformed

    private void txtMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMIActionPerformed

    private void cbxYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxYearActionPerformed
        // TODO add your handling code here:
        try {
            if (cbxYear.getSelectedItem().equals("7")){

                cbxSection.removeAllItems();
                cbxSection.setSelectedItem(null);
                cbxSection.addItem("Diamond");
                cbxSection.addItem("Emerald");
                cbxSection.addItem("Ruby");

            } else if (cbxYear.getSelectedItem().equals("8")){

                cbxSection.removeAllItems();
                cbxSection.setSelectedItem(null);
                cbxSection.addItem("Jasmin");
                cbxSection.addItem("Sampaguita");
                cbxSection.addItem("Waling-Waling");

            } else if (cbxYear.getSelectedItem().equals("9")){

                cbxSection.removeAllItems();
                cbxSection.setSelectedItem(null);
                cbxSection.addItem("Lithium");
                cbxSection.addItem("Potassium");
                cbxSection.addItem("Sodium");

            } else if (cbxYear.getSelectedItem().equals("10")){

                cbxSection.removeAllItems();
                cbxSection.setSelectedItem(null);
                cbxSection.addItem("Gluon");
                cbxSection.addItem("Graviton");
                cbxSection.addItem("Muon");

            } else if (cbxYear.getSelectedItem().equals("11")){

                cbxSection.removeAllItems();
                cbxSection.setSelectedItem(null);
                cbxSection.addItem("Polaris");
                cbxSection.addItem("Rigel");
                cbxSection.addItem("Serius");

            } else if (cbxYear.getSelectedItem().equals("12")){

                cbxSection.removeAllItems();
                cbxSection.setSelectedItem(null);
                cbxSection.addItem("Curie");
                cbxSection.addItem("Einstein");
                cbxSection.addItem("Tesla");

            }
            } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_cbxYearActionPerformed

    private void cbxSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxSectionActionPerformed

    private void ckbxAbsentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxAbsentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxAbsentActionPerformed

    private void ckbxBioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxBioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxBioActionPerformed

    private void ckbxTardyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxTardyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxTardyActionPerformed

    private void ckbxCuttingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxCuttingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxCuttingActionPerformed

    private void txtClassesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClassesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClassesActionPerformed

    private void txtDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDaysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDaysActionPerformed

    private void ckbxChemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxChemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxChemActionPerformed

    private void ckbxCSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxCSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxCSActionPerformed

    private void ckbxEngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxEngActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxEngActionPerformed

    private void ckbxFilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxFilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxFilActionPerformed

    private void ckbxMathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxMathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxMathActionPerformed

    private void ckbxPEHMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxPEHMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxPEHMActionPerformed

    private void ckbxPhyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxPhyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxPhyActionPerformed

    private void ckbxSSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxSSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxSSActionPerformed

    private void ckbxElectiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxElectiveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxElectiveActionPerformed

    private void ckbxValEdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxValEdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxValEdActionPerformed

    private void ckbxResActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxResActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxResActionPerformed

    private void txtIncDatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIncDatesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIncDatesActionPerformed

    private void txtMinutesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinutesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMinutesActionPerformed

    private void txtReasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReasonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReasonActionPerformed

    private void ckbxHSUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxHSUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxHSUActionPerformed

    private void ckbxGSUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxGSUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxGSUActionPerformed

    private void ckbxExcusedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxExcusedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxExcusedActionPerformed

    private void ckbxUnexcusedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbxUnexcusedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckbxUnexcusedActionPerformed

    private void txtMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMonthActionPerformed

    private void txtYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtYearActionPerformed

    private void txtDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDayActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // Student name
        String lastName = txtLName.getText().trim();
        String firstName = txtGName.getText().trim();
        String middleInitial = txtMI.getText().trim();
        String fullName = null;  // Declare it first
        StringBuilder errorMsg = new StringBuilder();

        // Check if any of the fields are empty
        if (lastName.isEmpty()) {
            errorMsg.append("• Last Name is required.\n");
        }
        if (firstName.isEmpty()) {
            errorMsg.append("• First Name is required.\n");
        }
        if (middleInitial.isEmpty()) {
            errorMsg.append("• Middle Initial is required.\n");
        }

        // If any field is empty, show an error message
        if (errorMsg.length() > 0) {
            JOptionPane.showMessageDialog(null, "Please correct the following:\n" + errorMsg);
            return;
        }

        // Now validate character content with .matches()
        try {
            if (!lastName.matches("[a-zA-Z\\s\\-']+")) {
                throw new IllegalArgumentException("Last Name must contain only alphabetic characters.");
            }
            if (!firstName.matches("[a-zA-Z\\s\\-']+")) {
                throw new IllegalArgumentException("First Name must contain only alphabetic characters.");
            }
            if (!middleInitial.matches("[a-zA-Z]")) {
                throw new IllegalArgumentException("Middle Initial must be a single letter.");
            }

            // If validation passes, build the full name
            fullName = lastName + ", " + firstName + " " + middleInitial;

        } catch (IllegalArgumentException e) {
            // If validation fails, show the error message
            JOptionPane.showMessageDialog(null, e.getMessage());
            return; // Stop further processing if validation fails
        }

        // Year-Section
        String year = (String) cbxYear.getSelectedItem();
        String section = (String) cbxSection.getSelectedItem();
        
        String yearAndSection = year + " - " + section;
        
        // Offense
        String offense = null;

        try {
            List<String> selectedOffense = new ArrayList<>();

            if (ckbxAbsent != null && ckbxAbsent.isSelected()) 
                selectedOffense.add(ckbxAbsent.getText());
            if (ckbxTardy != null && ckbxTardy.isSelected()) 
                selectedOffense.add(ckbxTardy.getText());
            if (ckbxCutting != null && ckbxCutting.isSelected()) 
                selectedOffense.add(ckbxCutting.getText());

            if (selectedOffense.isEmpty()) {
                throw new IllegalArgumentException("At least one offense must be selected.");
            }

            offense = String.join("\n", selectedOffense);  // store all selected offenses into one string

        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            return;  // Stop execution if validation fails
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "An unexpected error occurred while processing offenses: " + e.getMessage());
            return;
        }


        // Minutes, days, and classes
        float days = 0;
        int minute = 0, classes = 0;

        try {
            minute = Integer.parseInt(txtMinutes.getText().trim());
            days = Float.parseFloat(txtDays.getText().trim());
            classes = Integer.parseInt(txtClasses.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter valid numbers for Minute, Days (decimal), and Classes.");
            return;
        }
        
        // Missed subjects
        String subjects = null;

        try {
            List<String> selectedSubjects = new ArrayList<>();

            if (ckbxBio != null && ckbxBio.isSelected()) selectedSubjects.add(ckbxBio.getText());
            if (ckbxChem != null && ckbxChem.isSelected()) selectedSubjects.add(ckbxChem.getText());
            if (ckbxCS != null && ckbxCS.isSelected()) selectedSubjects.add(ckbxCS.getText());
            if (ckbxEng != null && ckbxEng.isSelected()) selectedSubjects.add(ckbxEng.getText());
            if (ckbxFil != null && ckbxFil.isSelected()) selectedSubjects.add(ckbxFil.getText());
            if (ckbxMath != null && ckbxMath.isSelected()) selectedSubjects.add(ckbxMath.getText());
            if (ckbxPEHM != null && ckbxPEHM.isSelected()) selectedSubjects.add(ckbxPEHM.getText());
            if (ckbxPhy != null && ckbxPhy.isSelected()) selectedSubjects.add(ckbxPhy.getText());
            if (ckbxRes != null && ckbxRes.isSelected()) selectedSubjects.add(ckbxRes.getText());
            if (ckbxSS != null && ckbxSS.isSelected()) selectedSubjects.add(ckbxSS.getText());
            if (ckbxElective != null && ckbxElective.isSelected()) selectedSubjects.add(ckbxElective.getText());
            if (ckbxValEd != null && ckbxValEd.isSelected()) selectedSubjects.add(ckbxValEd.getText());

            if (selectedSubjects.isEmpty()) {
                throw new IllegalArgumentException("Please select at least one subject.");
            }
//eirugciufgruoghrochgorhgothuthuothgcp
            subjects = String.join("\n", selectedSubjects);  // Join with newline, or use ", " if preferred

        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            return; // Stop further execution
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "An error occurred while selecting subjects: " + e.getMessage());
            return;
        }

        // Inclusive dates
        String inclusiveDates = txtIncDates.getText().trim();
        if (inclusiveDates.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please enter inclusive dates.");
        return;
        }
        
        // Reason
        String reason = txtReason.getText().trim();
        if (reason.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please enter the reason for the said offense/s.");
        return;
        }
        
        // Attachments
        List<String> selectedAttachment = new ArrayList<>();

        if (ckbxMedCert.isSelected()) selectedAttachment.add(ckbxMedCert.getText());
        if (ckbxLetter.isSelected()) selectedAttachment.add(ckbxLetter.getText());

        String attachment = selectedAttachment.isEmpty() ? null : String.join("\n", selectedAttachment);
        
        // Certified by
        List<String> certifiedBy = new ArrayList<>();

        if (ckbxHSU.isSelected()) certifiedBy.add(ckbxHSU.getText());
        if (ckbxGSU.isSelected()) certifiedBy.add(ckbxGSU.getText());

        String certified = certifiedBy.isEmpty() ? null : String.join("\n", certifiedBy);
        
        // Registrar
        List<String> approvedNotApproved = new ArrayList<>();

        if (ckbxExcused.isSelected()) approvedNotApproved.add(ckbxExcused.getText());
        if (ckbxUnexcused.isSelected()) approvedNotApproved.add(ckbxUnexcused.getText());

        String registrar = approvedNotApproved.isEmpty() ? null : String.join("\n", approvedNotApproved);
        
        // Date issued
        String mm = txtMonth.getText().trim();
        String dd = txtDay.getText().trim();
        String yy = txtYear.getText().trim();

        // Basic numeric validation
        if (!mm.matches("\\d{1,2}") || !dd.matches("\\d{1,2}") || !yy.matches("\\d{2,4}")) {
            JOptionPane.showMessageDialog(null, "Please enter valid numeric values for date issued.");
            return;
        }

        // Optional: zero-padding for single digits
        if (mm.length() == 1) mm = "0" + mm;
        if (dd.length() == 1) dd = "0" + dd;
        if (yy.length() == 4) yy = yy.substring(2); // convert 2025 to 25

        String dateIssued = mm + "/" + dd + "/" + yy;  // e.g., "04/30/25"






        // Database
        String url = "jdbc:mysql://localhost:3306/oas_database";
        String user = "root";
        String password = "mysql-DB1502";
        
        // Inserting input to database
        String sql = "INSERT INTO student_data (student_name, year_and_section, offense, minutes, days, classes, missed_subjects, inclusive_dates, reason, attachments, certified_by, registrar, date_issued) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

        
        try (Connection conn = DriverManager.getConnection(url, user, password);
            PreparedStatement stmt = conn.prepareStatement(sql)) {

           // Set both parameters (this prevents the "parameter 2" error)
           stmt.setString(1, fullName);
           stmt.setString(2, yearAndSection);
           stmt.setString(3, offense);
           stmt.setInt(4, minute);
           stmt.setFloat(5, days);
           stmt.setInt(6, classes);
           stmt.setString(7, subjects); 
           stmt.setString(8, inclusiveDates); 
           stmt.setString(9, reason); 
           stmt.setString(10, attachment);
           stmt.setString(11, certified); 
           stmt.setString(12, registrar);
           stmt.setString(13, dateIssued);


           stmt.executeUpdate();
           conn.close();
           JOptionPane.showMessageDialog(null, "Record saved:\n" + fullName + "\n" + yearAndSection + "\n" + offense
                                         + "\n" + minute + "\n" + days + "\n" + classes + "\n" + subjects + "\n" + inclusiveDates 
                                         + "\n" + reason + "\n" + attachment + "\n" + certified + "\n" + registrar + "\n" + dateIssued);

       } catch (SQLException ex) {
           // This catches and shows the exact SQL error
           ex.printStackTrace(); // Shows error in the console
           JOptionPane.showMessageDialog(null, "Error saving record:\n" + ex.getMessage());
       }


    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        new AdmissionSlipForm().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdmissionSlipForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdmissionSlipForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdmissionSlipForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdmissionSlipForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdmissionSlipForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cbxSection;
    private javax.swing.JComboBox<String> cbxYear;
    private javax.swing.JCheckBox ckbxAbsent;
    private javax.swing.JCheckBox ckbxBio;
    private javax.swing.JCheckBox ckbxCS;
    private javax.swing.JCheckBox ckbxChem;
    private javax.swing.JCheckBox ckbxCutting;
    private javax.swing.JCheckBox ckbxElective;
    private javax.swing.JCheckBox ckbxEng;
    private javax.swing.JCheckBox ckbxExcused;
    private javax.swing.JCheckBox ckbxFil;
    private javax.swing.JCheckBox ckbxGSU;
    private javax.swing.JCheckBox ckbxHSU;
    private javax.swing.JCheckBox ckbxLetter;
    private javax.swing.JCheckBox ckbxMath;
    private javax.swing.JCheckBox ckbxMedCert;
    private javax.swing.JCheckBox ckbxPEHM;
    private javax.swing.JCheckBox ckbxPhy;
    private javax.swing.JCheckBox ckbxRes;
    private javax.swing.JCheckBox ckbxSS;
    private javax.swing.JCheckBox ckbxTardy;
    private javax.swing.JCheckBox ckbxUnexcused;
    private javax.swing.JCheckBox ckbxValEd;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblAttach;
    private javax.swing.JLabel lblCertBy;
    private javax.swing.JLabel lblClasses;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDateIssued;
    private javax.swing.JLabel lblDays;
    private javax.swing.JLabel lblGName;
    private javax.swing.JLabel lblHdr1;
    private javax.swing.JLabel lblHdr2;
    private javax.swing.JLabel lblIncDates;
    private javax.swing.JLabel lblLName;
    private javax.swing.JLabel lblMI;
    private javax.swing.JLabel lblMinutes;
    private javax.swing.JLabel lblMonth;
    private javax.swing.JLabel lblOffense;
    private javax.swing.JLabel lblReason;
    private javax.swing.JLabel lblRegistrar;
    private javax.swing.JLabel lblSubjects;
    private javax.swing.JLabel lblText1;
    private javax.swing.JLabel lblText2;
    private javax.swing.JLabel lblYear;
    private javax.swing.JLabel lblYrSec;
    private javax.swing.JTextField txtClasses;
    private javax.swing.JTextField txtDay;
    private javax.swing.JTextField txtDays;
    private javax.swing.JTextField txtGName;
    private javax.swing.JTextField txtIncDates;
    private javax.swing.JTextField txtLName;
    private javax.swing.JTextField txtMI;
    private javax.swing.JTextField txtMinutes;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtReason;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
